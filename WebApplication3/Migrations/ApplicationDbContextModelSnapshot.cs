// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Models;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication3.Models.Dokter", b =>
                {
                    b.Property<int>("DokterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DokterId"));

                    b.Property<string>("NamaDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokterId");

                    b.ToTable("Dokter");
                });

            modelBuilder.Entity("WebApplication3.Models.Pasien", b =>
                {
                    b.Property<int>("PasienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasienId"));

                    b.Property<string>("Agama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlergiObat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaraKeluar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DokterId")
                        .HasColumnType("int");

                    b.Property<string>("GolonganDarah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeadaanKeluar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPenanggungJawab")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoRM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pekerjaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiwayatPenyakit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusAsKes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusKawin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TanggalLahir")
                        .HasColumnType("datetime2");

                    b.HasKey("PasienId");

                    b.HasIndex("DokterId");

                    b.ToTable("Pasien");
                });

            modelBuilder.Entity("WebApplication3.Models.Pasien", b =>
                {
                    b.HasOne("WebApplication3.Models.Dokter", "Dokter")
                        .WithMany()
                        .HasForeignKey("DokterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dokter");
                });
#pragma warning restore 612, 618
        }
    }
}
